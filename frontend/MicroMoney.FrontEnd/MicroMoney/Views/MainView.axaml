<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:MicroMoney.ViewModels"
             xmlns:pivm="clr-namespace:MicroMoney.ViewModels.RightTabs.Panels.Information"
             xmlns:lvm="clr-namespace:MicroMoney.ViewModels.LeftTabs"
             xmlns:rvm="clr-namespace:MicroMoney.ViewModels.RightTabs"
             xmlns:dataTemplates="clr-namespace:MicroMoney.Views.TemplateUtils"
             xmlns:converters="clr-namespace:MicroMoney.Views.Converters"
             x:Class="MicroMoney.Views.MainView"
             x:DataType="vm:MainViewModel">
  <UserControl.Resources>
       <converters:TabIconConverter x:Key="tabIconConverter"/>
  </UserControl.Resources>
  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:MainViewModel />
  </Design.DataContext>
  <Grid>

    <ContentControl Content="{Binding Model}" ZIndex="2" Opacity="{Binding ModelOpacity}" IsEnabled="{Binding ModelEnabled}">
      <ContentControl.DataTemplates>
        <dataTemplates:DialogServiceTemplateSelector>
          <DataTemplate x:Key="MessageBox" DataType="vm:MessageBoxViewModel">
        </DataTemplate>
        <DataTemplate x:Key="MmLoginView" DataType="vm:LoginViewModel">
        </DataTemplate>
      </dataTemplates:DialogServiceTemplateSelector>
    </ContentControl.DataTemplates>
  </ContentControl>

  <Grid Opacity="{Binding MainViewOpacity}" ZIndex="1" IsEnabled="{Binding MainViewEnabled}">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="1*"/>
      <ColumnDefinition Width="2*"/>
    </Grid.ColumnDefinitions>

    <TabControl Grid.Column="0" TabStripPlacement="Top"
     ItemsSource="{Binding LeftTabs}"
     SelectedIndex="{Binding LeftTabsSelectedIndex, Mode=TwoWay}" 
     SelectedItem="{Binding LeftSelectedTab, Mode=TwoWay}"
      >
        <TabControl.ItemTemplate>
          <DataTemplate x:DataType="lvm:LeftTabsViewModel"> <!-- any data template you want, this is just an example -->
            <StackPanel Orientation="Horizontal">
                <PathIcon Data="{Binding Icon,Converter={StaticResource tabIconConverter}}" />
                <TextBlock Text="{Binding Title}" />
            </StackPanel>
          </DataTemplate>
        </TabControl.ItemTemplate>
        <TabControl.DataTemplates>
          <DataTemplate x:DataType="lvm:LeftTabsViewModel">
            <Border BorderThickness="1" BorderBrush="WhiteSmoke">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Background="WhiteSmoke">
                      <Button.Content> 
                          <PathIcon Data="{Binding Converter={StaticResource tabIconConverter}, ConverterParameter=Sync}" /> 
                      </Button.Content>
                    </Button>
                    <Button Background="WhiteSmoke" Command="{Binding AddNodeCommand}">
                      <Button.Content> 
                          <PathIcon Data="{Binding Converter={StaticResource tabIconConverter}, ConverterParameter=SquareAdd}" /> 
                      </Button.Content>
                    </Button>
                    <Button Background="WhiteSmoke" Command="{Binding DelNodeCommand}">
                      <Button.Content> 
                          <PathIcon Data="{Binding Converter={StaticResource tabIconConverter}, ConverterParameter=Delete}" /> 
                      </Button.Content>
                    </Button>
                </StackPanel>
              <TreeView Grid.Row="1"
                        ItemsSource="{Binding Nodes}" 
                        SelectedItems="{Binding SelectedNodes}"
                        SelectedItem="{Binding SelectedNode}"
                        SelectionMode="Single">
              <TreeView.ItemTemplate>
                <TreeDataTemplate ItemsSource="{Binding SubNodes}">
                  <Border BorderBrush="WhiteSmoke" BorderThickness="1">
                    <TextBlock Text="{Binding Title}" />
                  </Border>
                </TreeDataTemplate>
              </TreeView.ItemTemplate>
            </TreeView>
            </Grid>
          </Border>
          </DataTemplate>
      </TabControl.DataTemplates>
    </TabControl>
    <Grid Grid.Column="1" >
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition/>
      </Grid.RowDefinitions>
       <Border Grid.Row="0" Margin="15" BorderThickness="1" BorderBrush="WhiteSmoke">
         <TextBlock  Text="{Binding LeftSelectedTab.SelectedTreePath}"/>
      </Border>


    <TabControl Grid.Row="1" TabStripPlacement="Top"
     ItemsSource="{Binding RightTabs}"
     SelectedIndex="{Binding RightTabsSelectedIndex, Mode=TwoWay}" 
     SelectedItem="{Binding RightSelectedTab, Mode=TwoWay}"
      >
        <TabControl.ItemTemplate>
          <DataTemplate x:DataType="rvm:RightTabsViewModel"> <!-- any data template you want, this is just an example -->
            <StackPanel Orientation="Horizontal">
                <PathIcon Data="{Binding Icon,Converter={StaticResource tabIconConverter}}" />
                <TextBlock Text="{Binding Title}" />
            </StackPanel>
          </DataTemplate>
        </TabControl.ItemTemplate>

        <TabControl.DataTemplates>
          <DataTemplate x:DataType="rvm:RightTabsViewModel">
            <Border BorderThickness="1" BorderBrush="WhiteSmoke">
             <ContentControl Content="{Binding TabContent}">
              <ContentControl.DataTemplates>
                  <dataTemplates:RightTabsTemplateSelector>
                  <DataTemplate x:Key="ManageHoummieView" DataType="pivm:ManageHoummieViewModel">
                  </DataTemplate>
                  </dataTemplates:RightTabsTemplateSelector>
            </ContentControl.DataTemplates>
           </ContentControl>
          </Border>
          </DataTemplate>
      </TabControl.DataTemplates>
    </TabControl>
    </Grid>
  </Grid>
</Grid>
</UserControl>
